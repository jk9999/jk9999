<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
	
<mapper namespace="employee">
	<select id="search" 	parameterType="string"	resultType="employee">
		select * from employee where empno= #{empno}
	</select>
	<select id="searchAll" 	parameterType="pagebean" resultType="employee">
		select * from employee
		<where>
			<if test=" word != null ">
				<choose>
					<when test=" key == 'ename' ">
						ename = #{word}
					</when>
					<when test=" key == 'position' ">
						position like '%'||#{word}||'%'
					</when>
					<when test=" key == 'address' ">
						address like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
		order by empno asc
	</select>
	<select id="getCount" 	parameterType="pagebean" resultType="employee">
		select count(*)  from employee
		<where>
			<if test=" word != null ">
				<choose>
					<when test=" key == 'ename' ">
						ename = #{word}
					</when>
					<when test=" key == 'position' ">
						position like '%'||#{word}||'%'
					</when>
					<when test=" key == 'address' ">
						address like '%'||#{word}||'%'
					</when>
				</choose>
			</if>
		</where>
	</select>
	<insert id="insert"	parameterType="employee">
		insert into employee(empno, ename, salary, position, address)
		values ( #{empno:VARCHAR}
				, #{ename:VARCHAR}
				, #{salary:INTEGER}
				, #{position:VARCHAR}
				, #{address:VARCHAR}
		)
	</insert>
	<update id="update" parameterType="employee">
	update employee set 	ename=#{ename:VARCHAR}
							,salary =#{salary:INTEGER}
							,position =#{position:VARCHAR}
							,address =#{address:VARCHAR}
		where empno =#{empno:VARCHAR}
	</update>
	<delete id="delete" parameterType="string">
		delete from employee where empno=#{empno}	
	</delete>
</mapper>